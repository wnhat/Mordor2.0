<Window
    x:Class="EyeOfSauron.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:domain="clr-namespace:EyeOfSauron.ViewModel"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:viewModel="clr-namespace:EyeOfSauron.ViewModel"
    Title="Material Design in XAML"
    Width="1400"
    Height="800"
    MinWidth="800"
    MinHeight="500"
    MaxWidth="3840"
    MaxHeight="2560"
    
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
    
    d:DataContext="{d:DesignInstance domain:MainWindowViewModel}"
    AutomationProperties.Name="{Binding Title, RelativeSource={RelativeSource Self}}"
    Style="{StaticResource MaterialDesignWindow}"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    mc:Ignorable="d">
    <Window.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy" />
    </Window.CommandBindings>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  data template used for the dialogs example, defines a View for a ViewModel of type DateTime  -->
            <DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock Text="England win the World Cup:" />
                    <TextBlock Margin="0,8,0,0" Text="{Binding}" />
                    <TextBlock Margin="0,8,0,0" Text="You will never see that again." />
                    <Button
                        Margin="0,8,0,0"
                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                        Content="AWESOME"
                        IsDefault="True"
                        Style="{StaticResource MaterialDesignFlatButton}" />
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <materialDesign:DialogHost
        DialogTheme="Inherit"
        Identifier="RootDialog"
        SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <materialDesign:DrawerHost IsRightDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.RightDrawerContent>
                <DockPanel MinWidth="220">
                    <ToggleButton
                        Margin="16"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Top"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1000" />
                        </Grid.ColumnDefinitions>
                        <ContentControl
                            Margin="{Binding MarginRequirement, FallbackValue=16}"
                            Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                            DataContext="{Binding DemoItems[0]}"/>
                    </Grid>
                </DockPanel>
            </materialDesign:DrawerHost.RightDrawerContent>

            <DockPanel>
                <materialDesign:ColorZone
                    Padding="16"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    DockPanel.Dock="Top"
                    Mode="PrimaryMid">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal">

                            <materialDesign:PopupBox
                                DockPanel.Dock="Left"
                                PlacementMode="BottomAndAlignRightEdges"
                                StaysOpen="False">

                                <StackPanel>
                                    <Grid Margin="10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock Margin="0,0,10,0" Text="Light" />
                                        <ToggleButton
                                            x:Name="DarkModeToggleButton"
                                            Grid.Column="1"
                                            Click="MenuDarkModeButton_Click" />
                                        <TextBlock
                                            Grid.Column="2"
                                            Margin="10,0,0,0"
                                            Text="Dark" />
                                        <TextBlock
                                            Grid.Row="1"
                                            Margin="0,10,10,0"
                                            Text="Enabled" />
                                        <ToggleButton
                                            x:Name="ControlsEnabledToggleButton"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Margin="0,10,0,0"
                                            IsChecked="{Binding ControlsEnabled}" />
                                    </Grid>

                                    <Separator />

                                    <Button Click="MenuPopupButton_OnClick" Content="Hello World" />

                                    <Button Click="MenuPopupButton_OnClick" Content="Nice Popup" />

                                    <Button Content="Can't Touch This" IsEnabled="False" />

                                    <Separator />

                                    <Button Click="MenuPopupButton_OnClick" Content="Goodbye" />
                                </StackPanel>
                            </materialDesign:PopupBox>

                            <Button
                                Margin="24,0,0,0"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                Command="{Binding MovePrevCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                                  Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                ToolTip="Previous Item" />

                            <Button
                                Margin="16,0,0,0"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                Command="{Binding MoveNextCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                                  Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                ToolTip="Next Item" />

                            <Button
                                Margin="16,0,0,0"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                Command="{Binding HomeCommand}"
                                Content="{materialDesign:PackIcon Kind=Home,
                                                                  Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                ToolTip="Home" />

                            <Button
                                Margin="16,0,0,0"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                Click="Button_Click"
                                Content="{materialDesign:PackIcon Kind=Home,
                                                                  Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                ToolTip="Home" />
                        </StackPanel>



                        <ToggleButton
                            x:Name="MenuToggleButton"
                            AutomationProperties.Name="HamburgerToggleButton"
                            Click="MenuToggleButton_OnClick"
                            DockPanel.Dock="Right"
                            IsChecked="False"
                            Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                        <TextBlock
                            Margin="-152,0,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            AutomationProperties.Name="Material Design In XAML Toolkit"
                            FontSize="22"
                            Text="" />
                    </DockPanel>
                </materialDesign:ColorZone>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ScrollViewer
                        x:Name="MainScrollViewer"
                        materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                        HorizontalScrollBarVisibility="{Binding SelectedItem.HorizontalScrollBarVisibilityRequirement, FallbackValue=Disabled}"
                        VerticalScrollBarVisibility="{Binding SelectedItem.VerticalScrollBarVisibilityRequirement, FallbackValue=Disabled}">
                        <ContentControl
                            Margin="{Binding MarginRequirement, FallbackValue=16}"
                            Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                            DataContext="{Binding MyUserControl}"
                            DataContextChanged="OnSelectedItemChanged" />
                    </ScrollViewer>

                    <materialDesign:Snackbar
                        x:Name="MainSnackbar"
                        Grid.Row="1"
                        MessageQueue="{materialDesign:MessageQueue}" />
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
