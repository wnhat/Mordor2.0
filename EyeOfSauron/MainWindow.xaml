<Window
    x:Class="EyeOfSauron.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Converter="clr-namespace:EyeOfSauron.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:domain="clr-namespace:EyeOfSauron.ViewModel"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:uc="clr-namespace:EyeOfSauron.MyUserControl"
    xmlns:viewModel="clr-namespace:EyeOfSauron.ViewModel"
    Title="Eye of sauron"
    Width="1400"
    Height="800"
    MinWidth="800"
    MinHeight="500"
    MaxWidth="3840"
    MaxHeight="2560"
    d:DataContext="{d:DesignInstance domain:MainWindowViewModel}"
    AutomationProperties.Name="{Binding Title, RelativeSource={RelativeSource Self}}"
    Background="{DynamicResource MaterialDesignPaper}"
    Closing="Window_Closing"
    KeyDown="Window_KeyDown"
    Style="{StaticResource MaterialDesignWindow}"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    mc:Ignorable="d">
    <Window.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy" />
    </Window.CommandBindings>

    <Window.Resources>
        <ResourceDictionary>
            <Converter:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
            <Converter:InverseEnumToVisibilityConverter x:Key="InverseEnumToVisibilityConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <materialDesign:DialogHost
        DialogTheme="Inherit"
        Identifier="RootDialog"
        SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
        <materialDesign:DrawerHost IsRightDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.RightDrawerContent>
                <DockPanel MinWidth="220">
                    <ToggleButton
                        Margin="16"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Top"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1000" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Content="{Binding ColorTool}" />
                    </Grid>
                </DockPanel>
            </materialDesign:DrawerHost.RightDrawerContent>
            <DockPanel>
                <materialDesign:ColorZone
                    Padding="12"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    DockPanel.Dock="Top"
                    Mode="PrimaryMid">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button
                                Margin="16,0,0,0"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                Click="LoginButton_Click"
                                Content="{materialDesign:PackIcon Kind=Account,
                                                                  Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                ToolTip="Login" />
                            <materialDesign:Chip
                                Click="LoginButton_Click"
                                Content="{Binding UserInfo.User.Username, FallbackValue=UserName}"
                                Icon="{Binding UserInfo.User.Account, FallbackValue=U}"
                                IconBackground="{DynamicResource PrimaryHueLightBrush}"
                                IconForeground="{DynamicResource PrimaryHueLightForegroundBrush}" />
                            <materialDesign:PopupBox
                                DockPanel.Dock="Left"
                                PlacementMode="BottomAndAlignRightEdges"
                                StaysOpen="False">
                                <StackPanel>
                                    <Button
                                        HorizontalAlignment="Center"
                                        Click="LoginButton_Click"
                                        Content="{materialDesign:PackIcon Kind=AccountCircle}"
                                        ToolTip="User Change" />
                                    <Button
                                        HorizontalAlignment="Center"
                                        Click="LogoutButton_Click"
                                        Command="{Binding EndInspCommand}"
                                        Content="{materialDesign:PackIcon Kind=Logout}"
                                        ToolTip="Logout" />
                                </StackPanel>
                            </materialDesign:PopupBox>

                            <Label
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Center"
                                Content="{Binding InspImageView.DataContext.PanelId, FallbackValue={}}"
                                FontSize="16"
                                MouseDoubleClick="PanelidLableMouseDoubleClick"
                                ToolTip="Double Click to Copy" />

                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="24"
                                Text="{Binding DateTime, StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}" />
                        </StackPanel>

                        <ToggleButton
                            x:Name="MenuToggleButton"
                            AutomationProperties.Name="HamburgerToggleButton"
                            Click="ColorToolToggleButton_OnClick"
                            DockPanel.Dock="Right"
                            IsChecked="False"
                            Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                        <materialDesign:Badged
                            x:Name="EndInspButton"
                            Margin="16,0,20,0"
                            Badge="{Binding InspImageView.DataContext.RemainingCount, FallbackValue=0}"
                            BadgeColorZoneMode="PrimaryLight"
                            DockPanel.Dock="Right"
                            Visibility="{Binding OnShowView, Converter={StaticResource InverseEnumToVisibilityConverter}, Mode=TwoWay}">
                            <Button
                                Command="{Binding EndInspCommand}"
                                Content="End Insp"
                                Style="{StaticResource MaterialDesignRaisedLightButton}" />
                        </materialDesign:Badged>

                        <materialDesign:Badged
                            x:Name="StartInspButton"
                            Margin="16,0,20,0"
                            Badge="{Binding ProductSelectView.DataContext.SelectedProductCardViewModel.ProductInfo.Value}"
                            DockPanel.Dock="Right"
                            Visibility="{Binding OnShowView, Converter={StaticResource EnumToVisibilityConverter}, Mode=TwoWay}">
                            <Button
                                Command="{Binding StartInspCommand}"
                                CommandParameter="{Binding ProductSelectView.DataContext.SelectedProductCardViewModel.ProductInfo.Key}"
                                Content="Start Insp"
                                Style="{StaticResource MaterialDesignRaisedLightButton}" />
                        </materialDesign:Badged>

                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            DockPanel.Dock="Right"
                            Text="{Binding ProductSelectView.DataContext.SelectedProductCardViewModel.ProductInfo.Key.Name}" />
                        <TextBlock Text="" />
                    </DockPanel>
                </materialDesign:ColorZone>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ScrollViewer
                        x:Name="MainScrollViewer"
                        Grid.Column="0"
                        materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True">
                        <ContentPresenter Content="{Binding MainContent}" />
                    </ScrollViewer>
                    <Viewbox
                        x:Name="DefectJudgeViewbox"
                        Grid.Column="2"
                        Visibility="{Binding OnShowView, Converter={StaticResource InverseEnumToVisibilityConverter}, Mode=TwoWay}">
                        <ContentPresenter Content="{Binding DefectJudgeView}" />
                    </Viewbox>
                    <materialDesign:Snackbar
                        x:Name="MainSnackbar"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Bottom"
                        MessageQueue="{materialDesign:MessageQueue}" />
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
